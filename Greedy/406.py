# coding=utf-8

# 406、根据⾝⾼重建队列
# 题目：假设有打乱顺序的⼀群⼈站成⼀个队列，数组 people 表⽰队列中⼀些⼈的属性（不⼀定按顺序）。每个 people[i] = [hi, ki] 表⽰第 i 个⼈的⾝⾼为 hi ，前⾯ 正好 有 ki 个⾝⾼⼤于或等于hi 的⼈。请你重新构造并返回输⼊数组 people 所表⽰的队列。返回的队列应该格式化为数组 queue ，其中 queue[j] = [hj, kj] 是队列中第 j 个⼈的属性（queue[0] 是排在队列前⾯的⼈）。
# ⽰例 1：
# 输⼊：people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]
# 输出：[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]
# 解释：
# 编号为 0 的⼈⾝⾼为 5 ，没有⾝⾼更⾼或者相同的⼈排在他前⾯。
# 编号为 1 的⼈⾝⾼为 7 ，没有⾝⾼更⾼或者相同的⼈排在他前⾯。
# 编号为 2 的⼈⾝⾼为 5 ，有 2 个⾝⾼更⾼或者相同的⼈排在他前⾯，即编号为 0 和 1 的⼈。
# 编号为 3 的⼈⾝⾼为 6 ，有 1 个⾝⾼更⾼或者相同的⼈排在他前⾯，即编号为 1 的⼈。
# 编号为 4 的⼈⾝⾼为 4 ，有 4 个⾝⾼更⾼或者相同的⼈排在他前⾯，即编号为 0、1、2、3 的⼈。
# 编号为 5 的⼈⾝⾼为 7 ，有 1 个⾝⾼更⾼或者相同的⼈排在他前⾯，即编号为 1 的⼈。
# 因此 [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] 是重新构造后的队列。
# ⽰例 2：
# 输⼊：people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]
# 输出：[[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]
# 提⽰：
# 1 <= people.length <= 2000
# 0 <= hi <= 10^6
# 0 <= ki < people.length
# 题⽬数据确保队列可以被重建
