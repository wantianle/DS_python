# coding=utf-8

# 455、分发饼干
# 题目：假设你是⼀位很棒的家长，想要给你的孩⼦们⼀些⼩饼⼲。但是，每个孩⼦最多只能给⼀块饼⼲。对每个孩⼦ i，都有⼀个胃⼜值 g[i]，这是能让孩⼦们满⾜胃⼜的饼⼲的最⼩尺⼨；并且每块饼⼲ j，都有⼀个尺⼨ s[j] 。如果 s[j] >= g[i]，我们可以将这个饼⼲ j 分配给孩⼦ i ，这个孩⼦会得到满⾜。你的⽬标是尽可能满⾜越多数量的孩⼦，并输出这个最⼤数值。
# ⽰例 1:
# 输⼊: g = [1,2,3], s = [1,1]
# 输出: 1
# 解释:你有三个孩⼦和两块⼩饼⼲，3个孩⼦的胃⼜值分别是：1,2,3。虽然你有两块⼩饼⼲，由于他们的尺⼨都是1，你只能让胃⼜值是1的孩⼦满⾜。所以你应该输出1。
# ⽰例 2:
# 输⼊: g = [1,2], s = [1,2,3]
# 输出: 2
# 解释:你有两个孩⼦和三块⼩饼⼲，2个孩⼦的胃⼜值分别是1,2。你拥有的饼⼲数量和尺⼨都⾜以让所有孩⼦满⾜。所以你应该输出2。

# 主要思路：列表排序，逐一对比，小饼干喂饱小胃口的孩子，达到局部最优，从而整体最优

import numpy as np

# 创建随机列表代表孩子和饼干
g = np.random.randint(1, 16, size=15)
s = np.random.randint(1, 6, size=10)
# 排序
g.sort()
s.sort()
print("g =", g)
print("s =", s)
res = 0
# 逐一对比
for cookie in s:
    # 限制result的范围
    if res < len(g) and cookie >= g[res]:
        res += 1
print(res)
